{"version":3,"sources":["../node_modules/@arcgis/core/portal/support/geometryServiceUtils.js"],"names":["i","a","o","e","geometryServiceUrl","default","url","r","n","portal","t","getDefault","load","signal","helperServices","geometry","l","s","geometries","outSpatialReference","project","c","Array","isArray","length"],"mappings":"uQAIoKA,I,2EAAf,4CAAAC,EAAA,yDAAiBC,EAAjB,+BAAmB,KAAKF,EAAxB,wBAA8BG,IAAEC,mBAAhC,gCAAwE,+BAAxE,0BAAkHC,QAAlH,KAA2H,CAACC,IAAIH,IAAEC,oBAAlI,4CAA2JF,EAA3J,uBAAmK,IAAIK,IAAE,gDAAzK,eAAkOC,EAAE,WAAWN,EAAEA,EAAEO,QAAQC,IAAEC,aAAaT,EAA1Q,UAAkRM,EAAEI,KAAK,CAACC,OAAOb,IAAjS,aAAqSQ,EAAEM,gBAAgBN,EAAEM,eAAeC,UAAUP,EAAEM,eAAeC,SAAST,KAA5W,kCAAqY,+BAArY,2BAA+aD,QAA/a,KAAwb,CAACC,IAAIE,EAAEM,eAAeC,SAAST,KAAvd,gDAAme,IAAIC,IAAE,gDAAze,6C,+BAAwiBC,E,gFAAf,WAAiBL,EAAEO,GAAnB,MAAAT,EAAA,2BAAAA,EAAA,6DAAqBO,EAArB,+BAAuB,KAAKP,EAA5B,gCAA6CD,EAAEQ,EAAEP,GAAjD,cAAqCe,EAArC,QAAoDC,EAAE,IAAIf,KAAIgB,WAAW,CAACf,GAAGc,EAAEE,oBAAoBT,EAAnG,SAAmHM,EAAEI,QAAQH,EAAE,CAACJ,OAAOZ,IAAvI,YAA2GoB,EAA3G,UAAiJC,MAAMC,QAAQF,IAAI,IAAIA,EAAEG,OAAzK,0CAAuLH,EAAE,IAAzL,cAAkM,IAAId,IAAE,+CAAxM,6C","file":"static/js/23.9e5a72d5.chunk.js","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport e from\"../../config.js\";import r from\"../../core/Error.js\";import t from\"../Portal.js\";import o from\"../../rest/support/ProjectParameters.js\";async function i(o=null,i){if(e.geometryServiceUrl){return new(0,(await import(\"../../tasks/GeometryService.js\")).default)({url:e.geometryServiceUrl})}if(!o)throw new r(\"internal:geometry-service-url-not-configured\");let n;if(n=\"portal\"in o?o.portal||t.getDefault():o,await n.load({signal:i}),n.helperServices&&n.helperServices.geometry&&n.helperServices.geometry.url){return new(0,(await import(\"../../tasks/GeometryService.js\")).default)({url:n.helperServices.geometry.url})}throw new r(\"internal:geometry-service-url-not-configured\")}async function n(e,t,n=null,a){const l=await i(n,a),s=new o;s.geometries=[e],s.outSpatialReference=t;const c=await l.project(s,{signal:a});if(c&&Array.isArray(c)&&1===c.length)return c[0];throw new r(\"internal:geometry-service-projection-failed\")}export{i as create,n as projectGeometry};\n"],"sourceRoot":""}